public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
    List<List<Integer>> ans=new ArrayList<>();
    if(root==null) return ans; 
    Queue<TreeNode> q=new ArrayDeque<>();
    Stack<Integer> st=new Stack<>();
    q.add(root);
    boolean reverse=false;
    while(!q.isEmpty()){
    List<Integer> a=new ArrayList<>();
     int n=q.size();
    for(int i=0;i<n;i++){
    TreeNode curr=q.poll();
        if(reverse){
            st.push(curr.val);
        }
        else a.add(curr.val);
    if(curr.left!=null) q.add(curr.left);
    if(curr.right!=null) q.add(curr.right);
    }
        if(reverse==true){
            while(!st.isEmpty())
            a.add(st.pop());
        }
        reverse=!reverse;
        ans.add(a);
    }
        return ans;
    }

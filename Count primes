class Solution {
    public int countPrimes(int n) {
    if(n<2) return 0;
  boolean[] isP=new boolean[n];
isP[0]=true;
   isP[1]=true; 
   for(int i=2;i<=Math.sqrt(n);i++){
      for(int j=i*i;j<n;j+=i){
          isP[j]=true;
      }
   }
    int c=0;
    for(int i=2;i<n;i++){
        if(isP[i]==false) c++;
    }
        return c;
    }
}

//////////////////////////////////////////
public int countPrimes(int n) {
    if(n<2) return 0;
   int c=0;
    for(int i=2;i<n;i++){
    if(check(i)){
        c++;
    }
    }
        return c;
    }

    public boolean check(int num){
    for(int i=2;i<=Math.sqrt(num);i++){
        if((num%i)==0) return false;
    }
        return true;
    }

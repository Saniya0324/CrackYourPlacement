class Solution {
    public int lengthOfLongestSubstring(String s) {
   int n=s.length();
        int len=0;
HashSet<Character> h=new HashSet<>();
int l=0,r=0;
        while(l<n && r<n){
           // r=l;
     if(!h.contains(s.charAt(r))) {
    len = Math.max(len, r - l + 1);
    h.add(s.charAt(r));
    r++;
} 
   else{
       h.remove(s.charAt(l));
     l++;
        }
        }
        return len;
    }
}
//OR
class Solution {
    public int lengthOfLongestSubstring(String s) {
  int n=s.length(),res=0,l=0;

  for(int i=0;i<n;i++){
      HashSet<Character> h=new HashSet<>();
      String st="";
int j=i;
      while(j<n){
   if(!h.contains(s.charAt(j))){
       h.add(s.charAt(j));
       j++;      
      }
          else break;
   }
      st=s.substring(i,j);
      l=Math.max(l,st.length());
  }
        return l;
}
    }
